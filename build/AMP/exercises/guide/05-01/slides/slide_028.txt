Let’s also remember that the reason we take models to production is to power applications, and that can mean a few different things. Sometimes that means creating a REST API that interfaces with an entirely different part of your downstream tech stack, managed by another team, and your job as a data scientist or machine learning engineer ends with providing the Model REST APIs. But sometimes, you as a data scientist are responsible for working out how you’re going to surface your predictions to your internal business customers, and often, the best way to do that is with a lightweight web app using a framework like Flask, Shiny or Streamlit. Instead of you having to work out what software and infrastructure you’re going to use to host that web app, CML provides the ability to host that within the product.
Our customers love this, and it's a major differentiator against competitors like Sagemaker, Azure ML and Databricks ML who don’t have any kind of integrated capability for apps. So if you’re giving a demo of CML, make sure not to gloss over the Applications capability.
