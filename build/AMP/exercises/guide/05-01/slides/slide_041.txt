So with CDSW 1.6 which will be generally available in the 2nd part of July, we’re providing two kinds of 3rd party editor support:

First for Web-based editors that will run directly on CDSW. They are installed in an engine or a project like any other library. They are a URL you visit in a web browser (like CDSW itself, or Gmail). Of course the best known example is Jupyter Notebooks, but site administrators are free to add other web-based editors to the engines they provide. And an individual user can install an editor at the project level, as well.  Jupyter Notebook will come with CDSW 1.6 prepackaged. RStudio will not ship with CDSW because of licensing restrictions, but it’s a 20 minute job for an administrator to add it to a CDSW installation and we’ll provide the documented instructions for doing that.

Secondly we’re providing support in CDSW for remote editors like PyCharm over ssh. These are applications that run on the user’s computer. In order to work with CDSW we allow the user to connect their laptop to a running CDSW engine via SSH. They then tell their local editor about the SSH connection, and that editor shows the remote files on CDSW, and uses CDSW to provide code completion and execution.  Since it’s a local editor, this configuration of course needs to be done per user and can’t be done at the project level in CDSW.

So together these approaches cover the editors we are asked about most (Jupyter, RStudio and PyCharm), and these were tested as part of our development plan.  Other web editors and IDEs can work but they need to be installed or configured - again we’ll provide documented instructions for doing this generally and specifically for Jupyter Notebooks, RStudio and PyCharm.

For users of these editors, this replaces their main session and editor user interface, but users still need to come to the main CDSW UI to work with experiments, models, jobs and user/project administration.  As you’ll see in our upcoming team workflow demo, end-to-end data science projects typically involve different team members doing different parts of the workflow.  You’ll see how some team members can contribute key elements of the process using only their local editor connected to CDSW and they’re not doing much in CDSW at all.





